{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{{ attach_library('bootstrap_barrio/node') }}

{%
  set classes = [
    'node',
    'card d-flex flex-column flex-grow-1 rounded-3 overflow-hidden',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
    'clearfix',
  ]
%}
<article{{ attributes.addClass(classes) }}>
  {% if content.field_image | render or content.field_imagen_recurso | render or content.field_imagen_principal | render or content.field_video_url | render %}
    <div class="card-img-top position-relative">
      {{ content.field_image }}
      {{ content.field_imagen_recurso }}
      {{ content.field_imagen_principal }}
      {{ content.field_video_url }}

      {% if content.field_fecha | render %}
        <div class="d-flex align-items-center text-xs mb-2 ms-2 p-2 text-white bg-dark bg-opacity-75 rounded d-flex align-items-center position-absolute bottom-0 start-0">
          <i class="fa-solid fa-calendar-days me-2 text-white"></i>
          {{ content.field_fecha }}
        </div>
      {% endif %}
    </div>
  {% endif %}

  {# node videos que tienen video en el body #}
  {% if node.bundle == 'videos_destacados' and not content.field_video_url | render and content.body | render %}
    <div class="card-img-top card-img-top-video-destacado position-relative">
      {{ content.body.0 }}
    </div>
  {% endif %}

  <div class="card-body d-flex flex-column align-items-start">
    <header>
      {{ title_prefix }}
        <h3 class="{{ content.body | render or content.field_descripcion | render or content.field_descripcion_box | render ? 'mb-3' : 'mb-0' }}">
          <a href="{{ url }}" rel="bookmark" class="text-decoration-none">{{ label }}</a>
        </h3>
      {{ title_suffix }}
    </header>

    {% if node.bundle != 'videos_destacados' %}
      {% if content.body | render or content.field_descripcion | render or content.field_descripcion_box | render %}
        <div class="card-text mb-3">
          {{ content.body }}
          {{ content.field_descripcion }}
          {{ content.field_descripcion_box }}
        </div>
      {% endif %}
    {% endif %}

    {{ content | without(
      'field_image',
      'field_video_url',
      'field_imagen_recurso',
      'field_imagen_principal',
      'field_descripcion',
      'field_fecha',
      'field_descripcion_box',
      'body'
    ) }}

    {% if node.bundle != 'videos_destacados' %}
      <a href="{{ url }}" rel="bookmark" class="btn btn-primary btn-sm mt-auto">{{ 'Read More' | t }}</a>
    {% endif %}

  </div>
</article>
